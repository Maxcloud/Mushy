package handling;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import tools.ExternalCodeTableGetter;
import tools.IntValueHolder;

public enum RecvPacketOpcode implements IntValueHolder {

	// General
	LOGIN_REDIRECTOR,
	CRASH_INFO,
	RSA,
	PONG,

	// Login Opcodes
	GUEST_LOGIN,
	SERVERSTATUS_REQUEST,
	TOS,
	VIEW_SERVERLIST,
	SERVERLIST_REQUEST,
	REDISPLAY_SERVERLIST,
	USE_AUTH_SERVER,
	CHAR_SELECT_NO_PIC,
	PLAYER_LOGGEDIN,
	CHECK_CHAR_NAME,
	DELETE_CHAR,
	AUTH_REQUEST,
	CHAR_SELECT,
	VIEW_REGISTER_PIC,
	CHANGE_PIC_REQUEST,
	VIEW_SELECT_PIC,
	CLIENT_START,
	CLIENT_FAILED,
	PART_TIME_JOB,
	CHARACTER_CARD,
	ENABLE_LV50_CHAR,
	CREATE_LV50_CHAR,
	ENABLE_SPECIAL_CREATION,
	CLIENT_HELLO,
	LOGIN_PASSWORD,
	CREATE_SPECIAL_CHAR,
	CHARLIST_REQUEST,
	CREATE_CHAR,
	CREATE_ULTIMATE,
	AUTH_SECOND_PASSWORD,
	CLIENT_ERROR,

	// Channel Opcodes
	CHANGE_MAP,
	CHANGE_CHANNEL,
	ENTER_CASH_SHOP,
	ENTER_FARM,
	ENTER_AZWAN,
	ENTER_AZWAN_EVENT,
	LEAVE_AZWAN,
	ENTER_PVP,
	ENTER_PVP_PARTY,
	LEAVE_PVP,
	MOVE_PLAYER,
	CANCEL_CHAIR,
	USE_CHAIR,
	CLOSE_RANGE_ATTACK,
	RANGED_ATTACK,
	MAGIC_ATTACK,
	PASSIVE_ENERGY,
	TAKE_DAMAGE,
	PVP_ATTACK,
	GENERAL_CHAT,
	CLOSE_CHALKBOARD,
	FACE_EXPRESSION,
	FACE_ANDROID,
	USE_ITEMEFFECT,
	WHEEL_OF_FORTUNE,
	USE_TITLE,
	ANGELIC_CHANGE,
	CHANGE_CODEX_SET,
	CODEX_UNK,
	MONSTER_BOOK_DROPS,
	NPC_TALK,
	NPC_TALK_MORE,
	NPC_SHOP,
	STORAGE,
	USE_HIRED_MERCHANT,
	MERCH_ITEM_STORE,
	PACKAGE_OPERATION,
	MECH_CANCEL,
	OWL,
	OWL_WARP,
	ITEM_SORT,
	ITEM_GATHER,
	ITEM_MOVE,
	MOVE_BAG,
	SWITCH_BAG,
	USE_ITEM,
	CANCEL_ITEM_EFFECT,
	USE_SUMMON_BAG,
	PET_FOOD,
	USE_MOUNT_FOOD,
	USE_SCRIPTED_NPC_ITEM,
	USE_RECIPE,
	USE_NEBULITE,
	USE_ALIEN_SOCKET,
	USE_ALIEN_SOCKET_RESPONSE,
	USE_NEBULITE_FUSION,
	USE_CASH_ITEM,
	USE_CATCH_ITEM,
	USE_SKILL_BOOK,
	USE_EXP_POTION,
	TOT_GUIDE,
	USE_OWL_MINERVA,
	USE_TELE_ROCK,
	USE_RETURN_SCROLL,
	USE_UPGRADE_SCROLL,
	USE_FLAG_SCROLL,
	USE_EQUIP_SCROLL,
	USE_POTENTIAL_SCROLL,
	USE_BONUS_POTENTIAL,
	USE_ABYSS_SCROLL,
	USE_CARVED_SEAL,
	USE_BAG,
	USE_CRAFTED_CUBE,
	ITEM_UPGRADE_UI,
	USE_MAGNIFY_GLASS,
	DISTRIBUTE_AP,
	AUTO_ASSIGN_AP,
	HEAL_OVER_TIME,
	DISTRIBUTE_SP,
	SPECIAL_MOVE,
	CANCEL_BUFF,
	SKILL_EFFECT,
	MESO_DROP,
	GIVE_FAME,
	CHAR_INFO_REQUEST,
	SPAWN_PET,
	GET_BOOK_INFO,
	USE_FAMILIAR,
	SPAWN_FAMILIAR,
	RENAME_FAMILIAR,
	PET_BUFF,
	CANCEL_DEBUFF,
	CHANGE_MAP_SPECIAL,
	USE_INNER_PORTAL,
	TROCK_ADD_MAP,
	LIE_DETECTOR,
	LIE_DETECTOR_SKILL,
	LIE_DETECTOR_RESPONSE,
	REPORT,
	QUEST_ACTION,
	REISSUE_MEDAL,
	BUFF_RESPONSE,
	SKILL_MACRO,
	REWARD_ITEM,
	ITEM_MAKER,
	REPAIR_ALL,
	REPAIR,
	SOLOMON,
	GACH_EXP,
	FOLLOW_REQUEST,
	PQ_REWARD,
	FOLLOW_REPLY,
	AUTO_FOLLOW_REPLY,
	USE_TREASURE_CHEST,
	PROFESSION_INFO,
	USE_POT,
	CLEAR_POT,
	FEED_POT,
	CURE_POT,
	REWARD_POT,
	AZWAN_REVIVE,
	ZERO_TAG,
	USE_COSMETIC,
	INNER_CIRCULATOR,
	PVP_RESPAWN,
	GAIN_FORCE,
	BLACK_CUBE_RESULT,
	ADMIN_CHAT,
	PARTYCHAT,
	COMMAND,
	SPOUSE_CHAT,
	MESSENGER,
	PLAYER_INTERACTION,
	PARTY_OPERATION,
	DENY_PARTY_REQUEST,
	ALLOW_PARTY_INVITE,
	EXPEDITION_OPERATION,
	EXPEDITION_LISTING,
	GUILD_OPERATION,
	DENY_GUILD_REQUEST,
	ADMIN_COMMAND,
	ADMIN_LOG,
	BUDDYLIST_MODIFY,
	NOTE_ACTION,
	USE_DOOR,
	USE_MECH_DOOR,
	CHANGE_KEYMAP,
	RPS_GAME,
	RING_ACTION,
	WEDDING_ACTION,
	ALLIANCE_OPERATION,
	DENY_ALLIANCE_REQUEST,
	BBS_OPERATION,
	SOLOMON_EXP,
	NEW_YEAR_CARD,
	XMAS_SURPRISE,
	TWIN_DRAGON_EGG,
	ARAN_COMBO,
	TRANSFORM_PLAYER,
	CYGNUS_SUMMON,
	CRAFT_DONE,
	CRAFT_EFFECT,
	CRAFT_MAKE,
	CHANGE_ROOM_CHANNEL,
	EVENT_CARD,
	CHOOSE_SKILL,
	SKILL_SWIPE,
	VIEW_SKILLS,
	CANCEL_OUT_SWIPE,
	YOUR_INFORMATION,
	FIND_FRIEND,
	PINKBEAN_CHOCO_OPEN,
	PINKBEAN_CHOCO_SUMMON,
	BUY_SILENT_CRUSADE,
	BUDDY_ADD,
	MOVE_PET,
	PET_CHAT,
	PET_COMMAND,
	PET_LOOT,
	PET_AUTO_POT,
	PET_IGNORE,
	MOVE_HAKU,
	CHANGE_HAKU,
	// HAKU_1D8,
	// HAKU_1D9,
	MOVE_SUMMON,
	SUMMON_ATTACK,
	DAMAGE_SUMMON,
	SUB_SUMMON,
	REMOVE_SUMMON,
	PVP_SUMMON,
	MOVE_DRAGON,
	USE_ITEM_QUEST,
	MOVE_ANDROID,
	UPDATE_QUEST,
	QUEST_ITEM,
	MOVE_FAMILIAR,
	TOUCH_FAMILIAR,
	ATTACK_FAMILIAR,
	REVEAL_FAMILIAR,
	QUICK_SLOT,
	PAM_SONG,
	MOVE_LIFE,
	AUTO_AGGRO,
	FRIENDLY_DAMAGE,
	MONSTER_BOMB,
	HYPNOTIZE_DMG,
	MOB_BOMB,
	MOB_NODE,
	DISPLAY_NODE,
	MONSTER_CARNIVAL,
	NPC_ACTION,
	ITEM_PICKUP,
	DAMAGE_REACTOR,
	TOUCH_REACTOR,
	CLICK_REACTOR,
	MAKE_EXTRACTOR,
	UPDATE_ENV,
	SNOWBALL,
	LEFT_KNOCK_BACK,
	CANDY_RANKING,
	START_EVOLUTION,
	COCONUT,
	SHIP_OBJECT,
	PARTY_SEARCH_START,
	PARTY_SEARCH_STOP,
	START_HARVEST,
	STOP_HARVEST,
	QUICK_MOVE,
	CS_UPDATE,
	BUY_CS_ITEM,
	COUPON_CODE,
	CASH_CATEGORY,
	PLACE_FARM_OBJECT,
	FARM_SHOP_BUY,
	FARM_COMPLETE_QUEST,
	FARM_NAME,
	HARVEST_FARM_BUILDING,
	USE_FARM_ITEM,
	RENAME_MONSTER,
	NURTURE_MONSTER,
	EXIT_FARM,
	FARM_QUEST_CHECK,
	FARM_FIRST_ENTRY,
	GOLDEN_HAMMER,
	VICIOUS_HAMMER,
	PYRAMID_BUY_ITEM,
	CLASS_COMPETITION,
	MAGIC_WHEEL,
	REWARD,
	BLACK_FRIDAY,
	UPDATE_RED_LEAF,

	CHANGE_FM_MAP,

	// Not Placed:
	SPECIAL_STAT,
	UPDATE_HYPER,
	RESET_HYPER,
	DRESSUP_TIME,
	DF_COMBO,
	BUTTON_PRESSED,
	OS_INFORMATION,
	LUCKY_LOGOUT,
	MESSENGER_RANKING;
	private int code = -2;

	@Override
	public void setValue(int code) {
		this.code = code;
	}

	@Override
	public final int getValue() {
		return code;
	}
	
	public static Properties getDefaultProperties() throws FileNotFoundException, IOException {
		Properties props = new Properties();
		FileInputStream fis = new FileInputStream(System.getProperty("recvops"));
		props.load(fis);
		fis.close();
		return props;
	}
	
	static {
		try {
			ExternalCodeTableGetter.populateValues(getDefaultProperties(), values());
		} catch (IOException e) {
			throw new RuntimeException("Failed to load recvops", e);
		}
	}
	
	public static RecvPacketOpcode getByValue(int value){
		for (RecvPacketOpcode op : RecvPacketOpcode.values()){
			if (op.getValue() == value){
				return op;
			}
		}
		return null;
	}
	
}
